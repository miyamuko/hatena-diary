
*p1*[xyzzy] hatena-diary-mode の CSRF 脆弱性対策対策

hatena-diary-mode を導入してみたが何度やっても書き込めない。

って、これですか・・・orz
http://d.hatena.ne.jp/hatenadiary/20050715/1121427904

こんな感じ?

>||
diff -ub elxa.org/basef.l elxa/basef.l
--- elxa.org/basef.l	Fri Mar 05 14:10:52 2004
+++ elxa/basef.l	Tue Aug 16 20:52:47 2005
@@ -83,9 +83,7 @@
 	(set-buffer-modified-p t)))
 
 (defun base64-encode-string (str)
-  (progn
-	(string-match "\\(.+\\)[\\r\\n]*" (si:base64-encode str))
-	(match-string 1)))
+  (substitute-string (si:base64-encode str) "[=\r\n]+" ""))
 
 ;;(defun www-url-form-encode (str)
 ;;  (substitute-string
diff -ub hatena.org/hatena-diary-mode.l hatena/hatena-diary-mode.l
--- hatena.org/hatena-diary-mode.l	Tue Feb 15 19:58:52 2005
+++ hatena/hatena-diary-mode.l	Tue Aug 16 17:33:04 2005
@@ -309,6 +309,8 @@
 		  (pushnew (cons "month" month) post-data :test 'equal)
 		  (pushnew (cons "day" day) post-data :test 'equal)
 		  (pushnew (cons "title" (www-url-form-encode title)) post-data :test 'equal)
+		  (pushnew (cons "rkm" (hatena-diary-encode-rkm (crylib-decrypt-data cookie)))
+				   post-data :test 'equal)
 		  (and data
 			   (pushnew (cons "body" (www-url-form-encode data)) post-data :test 'equal))
 		  (and (equal *hatena-diary-post-mode* "replace")
@@ -322,6 +324,17 @@
 	(if (bufferp buf)
 		buf
 	  nil)))
+
+(defun hatena-diary-encode-rkm (cookie)
+  (when (string-matchp "rk=\\([^,; ]+\\)" cookie)
+	(hatena-diary-md5-base64 (match-string 1))))
+
+(defun hatena-diary-md5-base64 (str)
+  (let ((start 0) (ostream (make-string-output-stream)))
+	(while (string-matchp "[0-9A-F]\\{2\\}" (si:md5 str) start)
+	  (setf start (match-end 0))
+	  (write-char (code-char (parse-integer (match-string 0) :radix 16)) ostream))
+	(base64-encode-string (get-output-stream-string ostream))))
 
 (defun hatena-diary-post-text ()
   (let* ((dirname (merge-pathnames *hatena-id*

||<

*p2*[xyzzy] バイナリデータの扱い

perl や ruby の pack/unpack 相当がほしいんだけどどうやるんだろう。
si:pack-xxx は chunk がらみの別物だし。

結局以下を参考に自分で適当に書いたのだが。
http://www.geocities.co.jp/SiliconValley-SanJose/7474/cmuclMemo.html#0024
