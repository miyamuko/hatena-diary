
*nyaos_with_pik*[Ruby][pik][nyaos]nyaos で pik を使う設定と pik の動作原理

(pik 0.2.8 の動作を元に書いています)


** nyaos で pik を使う設定

>http://route477.net/d/?date=20100327#p01:title>
nyaos上だとpik useがうまく動かない。
<<

以下の設定を _nya に記述することで nyaos で pik が利用できるようになります。

>|dosbatch|
pik{
  pik_runner.exe pik.bat %*
  if exist "%USERPROFILE%\.pik\pik.bat" then
    source "%USERPROFILE%\.pik\pik.bat" 2> nul
  endif
}
||<

こんな感じですね。


[http://farm5.static.flickr.com/4108/4960401242_7ff25c27c6_z_d.jpg:image]



** pik の動作原理

コマンドプロンプトから pik を実行した場合、以下のような流れで環境変数が設定されます。

＃ここでは pik_install に指定したディレクトリを <pik_path> と表記します。

*** 1. pik.bat の実行

コマンドプロンプトで pik を実行した場合、<pik_path>/pik.bat が実行されます。
ここで pik.bat はサブプロセスではなくは cmd.exe のプロセス内で評価されることに注意してください。

*** 2. pik.bat の処理

[http://github.com/vertiginous/pik/blob/v0.2.8/tools/pik.bat:title=pik.bat の中身]は以下のようになっています。

>|dosbatch|
@ECHO OFF
"%~dp0pik_runner.exe" "%~f0" %*
IF EXIST "%USERPROFILE%\.pik\pik.bat" (call "%USERPROFILE%\.pik\pik.bat")
||<

pik.bat ではまず pik_runner.exe を以下の引数で実行します。
+ %~f0 は %0 のファイル名部分という意味ですね。で、%0 は実行したバッチファイル名が入っています。よって、第 1 引数は "pik.bat" です。
+ %* は pik.bat に指定した引数全部です (use 187 とかですね)

例えば pik use 187 を実行した場合、pik_runner.exe "pik.bat" use 187 が実行されます。

*** 2-1. pik_runner.exe の処理

pik_runner.exe は pik のスクリプトを Exerb で固めた実行ファイルです。

pik_runner は第 2 引数以降で指定された引数 (use 187 とか) に応じた Ruby のパスを事前に pik add した中から探します。これが切り替え先の Ruby のパスです。

次に現在の環境変数 PATH の中から最初に ['ruby.exe', 'ir.exe', 'jruby.exe', 'jruby.bat'] のどれかが存在するディレクトリを探します。これが現在の Ruby のパスですね。

最後に現在の Ruby のパスを切り替え先の Ruby のパスに置換した環境変数を作成し、以下のような %USERPROFILE%\pik\pik.bat を生成します。

>|dosbatch|
@ECHO OFF

::  This batch file generated by Pik, the
::  Ruby Manager for Windows

SET PATH=<切り替え先の Ruby パスに置換した PATH 環境変数>
SET GEM_PATH=
SET GEM_HOME=
||<

ソースとしては以下のあたりを読めばいいと思います。
- http://github.com/vertiginous/pik/blob/v0.2.8/lib/pik/commands/script_file_editor.rb#L20
- http://github.com/vertiginous/pik/blob/v0.2.8/lib/pik/commands/use_command.rb#L13
- http://github.com/vertiginous/pik/blob/v0.2.8/lib/pik/scripts/batch_file.rb#L1

*** 2-2. PATH の切り替え処理

pik_runner.exe によって切り替え先のパスを記述した %USERPROFILE%/pik/pik.bat が生成されました。
<pik_path>/pik.bat では最後にこのファイルを実行します。

pik_runner.exe はサブプロセスとして実行されますが、%USERPROFILE%/pik/pik.bat は <pik_path>/pik.bat と同じで cmd.exe 内で実行されます。


[http://farm5.static.flickr.com/4100/4959805341_d580fdeebf_d.jpg:image]


これで cmd.exe の環境変数が切り替わりました。めでたしめでたし。


** nyaos で pik が動かない原因

nyaos から <pik_path>/pik.bat を実行する場合、それは cmd.exe 経由で実行されます。


[http://farm5.static.flickr.com/4084/4959805393_632809a19f_d.jpg:image]


pik_runner.exe が生成した %USERPROFILE%/pik/pik.bat もこのサブプロセスの cmd.exe が実行します。
cmd.exe の環境変数は切り替わりますが、親プロセスである nyaos.exe の環境変数は切り替わりません。残念！

nyaos_ja.txt にも書いてありますね。

>http://bitbucket.org/zetamatta/nyaos3000/src/tip/nyaos_ja.txt:title>
BATファイルを普通に実行しても、そのBATファイルが変更した環境変数は
親プロセスである SHELL に反映しません。環境変数を変更する BAT
ファイルを実行する際は、「source ファイル名」を実行してください。
<<


** nyaos で pik を動かす方法

nyaos で pik を動かすヒントは pik_install コマンドのメッセージにありました。

>||
> pik_install c:\tools

   (ry

if you want to use pik with git bash, add the following line to your ~/.bashrc:

  [[ -s $USERPROFILE/.pik/.pikrc ]] && source $USERPROFILE/.pik/.pikrc
||<

Git Bash でも動かしたい場合は .pikrc を読み込んでおけということですね。
nyaos と同じで Git Bash は pik.bat を直に読み込んで環境変数を設定するということはできません。
ではどうやって環境変数を設定しているのでしょうか？


[http://github.com/vertiginous/pik/blob/v0.2.8/bin/pik_install#L58:title=.pikrc のソース]は以下のようになっています。

>|ruby|
pikrc_file = File.join(pik_home, '.pikrc')
pikrc_contents =<<PIKRC
#!/bin/sh
pik_path=#{bash_install_dir}

function pik  {
  $pik_path/pik_runner.exe pik.sh $@
  [[ -s $USERPROFILE/.pik/pik.sh ]] && source $USERPROFILE/.pik/pik.sh
}
PIKRC
||<


そうです。Git Bash で pik を実行した場合 <pik_path>/pik.bat が実行されるのではなく pik 関数が実行されるようです。
そして pik_runner.exe は第 1 引数の拡張子によって生成するスクリプトを変えるようですね (今のところ対応しているスクリプトは[http://github.com/vertiginous/pik/blob/v0.2.8/lib/pik.rb#L48:title=バッチファイル、PowerShell、シェルスクリプト])。


ということで、あとは pik 関数を nyaos 用に移植するだけです。

やることは pik_runner.exe を実行して、生成された pik.bat を source で読み込むだけです。幸いにもpik_runner.exe が生成したバッチファイルは nyaos で大体そのまま読みこめます。

ただ、先頭の @ECHO OFF は nyaos は認識してくれないのでエラーが出てしまいます。生成するバッチファイルを変更するのは面倒なので source の stderr を nul にリダイレクトして捨ててしまいましょう。


で、できたのが以下の関数です。_nya に貼り付けておけばこれで pik が使えるようになります。


>|dosbatch|
pik{
  pik_runner.exe pik.bat %*
  if exist "%USERPROFILE%\.pik\pik.bat" then
    source "%USERPROFILE%\.pik\pik.bat" 2> nul
  endif
}
||<


** pik use --global

>http://route477.net/d/?date=20100327#p01:title>
pikは基本的に%PATH%を操作するという設計っぽいのだが、

       WindowsEnv.user.set(k => v) if global

という行があって、どうもwin32/registryを使って HKEY_CURRENT_USER.Environmentを直接書き換えてる模様。うーむ。
<<


余談ですが pik use コマンドは --global オプションを指定された場合の動作は上記のとおり実装されていますが、[http://github.com/vertiginous/pik/blob/v0.2.8/spec/switch_command_spec.rb#L17:title=まだ --global オプションは有効になっていない]ようです。
よって、HKEY_CURRENT_USER.Environment を直接書き換えてるわけではありません。





以上です。
まぁ、私 nyaos ユーザじゃないんですけどね。
